// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RefundWebApplication.Data;

#nullable disable

namespace RefundWebApplication.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240115181427_Seed3")]
    partial class Seed3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RefundWebApplication.Models.Domain.AttachmentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComplaintModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintModelId");

                    b.ToTable("AttachmentModel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5af7eda-8add-4e4d-ae31-3e3de4ddceb2"),
                            ComplaintId = new Guid("f117825f-f03c-413f-a51a-efcc90f0af4f"),
                            FileName = "example.jpg",
                            FilePath = "/uploads/example.jpg",
                            FileType = "image",
                            UploadDate = new DateTime(2023, 12, 15, 19, 14, 26, 964, DateTimeKind.Local).AddTicks(4343)
                        });
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ComplaintHistoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComplaintModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintModelId");

                    b.ToTable("ComplaintHistoryModel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb7af25d-812c-4765-ae1a-4ac55844c4fa"),
                            Action = "Change status",
                            ActionDate = new DateTime(2023, 12, 15, 19, 14, 26, 964, DateTimeKind.Local).AddTicks(4321),
                            ComplaintId = new Guid("f117825f-f03c-413f-a51a-efcc90f0af4f"),
                            Details = "Complaint has been resolved.",
                            Status = "Resolved"
                        });
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ComplaintModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplaintModel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ca8bce3-b34e-4058-9365-99f56e8446ce"),
                            City = "Sample Town",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            HouseNumber = "Suite 101",
                            IssueDescription = "Product issue description goes here",
                            LastName = "Smith",
                            Phone = "555-987-6543",
                            PostalCode = "54321",
                            PurchaseDate = new DateTime(2023, 10, 15, 19, 14, 26, 964, DateTimeKind.Local).AddTicks(4181),
                            SerialNumber = "0987654321",
                            Street = "456 Oak St"
                        });
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.CustomerModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ComplaintModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintModelId");

                    b.ToTable("CustomerModel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a71d37e-2bfd-4704-ba18-3655dc64cd44"),
                            City = "Example City",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            HouseNumber = "Apt 4B",
                            LastName = "Doe",
                            Phone = "555-555-5555",
                            PostalCode = "12345",
                            Street = "123 Main Street"
                        });
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.EmailLogsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComplaintModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintModelId");

                    b.ToTable("EmailLogsModel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90f0ee09-4285-4fed-b419-8c72da3c16a2"),
                            ComplaintId = new Guid("f117825f-f03c-413f-a51a-efcc90f0af4f"),
                            EmailBody = "This is a sample email body.",
                            EmailSubject = "Sample Email",
                            RecipientEmail = "recipient@example.com",
                            SentDate = new DateTime(2023, 12, 15, 19, 14, 26, 964, DateTimeKind.Local).AddTicks(4358)
                        });
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComplaintModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WarrantyEndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintModelId");

                    b.ToTable("ProductModel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48f53204-9140-4740-ba43-2c455934221c"),
                            Name = "Example Product",
                            PurchaseDate = new DateTime(2023, 10, 15, 19, 14, 26, 958, DateTimeKind.Local).AddTicks(8236),
                            SerialNumber = "1234567890",
                            WarrantyEndDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.AttachmentModel", b =>
                {
                    b.HasOne("RefundWebApplication.Models.Domain.ComplaintModel", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ComplaintModelId");
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ComplaintHistoryModel", b =>
                {
                    b.HasOne("RefundWebApplication.Models.Domain.ComplaintModel", null)
                        .WithMany("History")
                        .HasForeignKey("ComplaintModelId");
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.CustomerModel", b =>
                {
                    b.HasOne("RefundWebApplication.Models.Domain.ComplaintModel", null)
                        .WithMany("Customer")
                        .HasForeignKey("ComplaintModelId");
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.EmailLogsModel", b =>
                {
                    b.HasOne("RefundWebApplication.Models.Domain.ComplaintModel", null)
                        .WithMany("EmailLogs")
                        .HasForeignKey("ComplaintModelId");
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ProductModel", b =>
                {
                    b.HasOne("RefundWebApplication.Models.Domain.ComplaintModel", null)
                        .WithMany("Products")
                        .HasForeignKey("ComplaintModelId");
                });

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ComplaintModel", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Customer");

                    b.Navigation("EmailLogs");

                    b.Navigation("History");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
