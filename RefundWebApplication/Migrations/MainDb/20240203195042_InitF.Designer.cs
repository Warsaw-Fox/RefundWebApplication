// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RefundWebApplication.Data;

#nullable disable

namespace RefundWebApplication.Migrations.MainDb
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240203195042_InitF")]
    partial class InitF
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RefundWebApplication.Models.Domain.ComplaintModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FixDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complaints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24bb8fd6-9bfe-42d5-b91a-f7b350df6ca1"),
                            City = "Sample Town",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            FixDescription = "Product fix description goes here",
                            HouseNumber = "Suite 101",
                            IssueDate = new DateTime(2024, 2, 3, 20, 50, 42, 224, DateTimeKind.Local).AddTicks(134),
                            IssueDescription = "Product issue description goes here",
                            LastName = "Smith",
                            PostalCode = "54321",
                            ProductModel = "LENOVO IdeaPad Slim 3 15IAH8",
                            PurchaseDate = new DateTime(2023, 11, 3, 20, 50, 42, 224, DateTimeKind.Local).AddTicks(69),
                            SerialNumber = "0987654321",
                            Status = "Nowy",
                            Street = "456 Oak St"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
